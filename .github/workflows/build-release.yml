name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            binary_name: static-serve-action-linux-x64
          - os: macos-latest
            target: x86_64-apple-darwin
            binary_name: static-serve-action-macos-x64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary_name: static-serve-action-windows-x64.exe

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      
      - name: Install musl tools (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools musl-dev
          
      - name: Build
        run: cargo build --release --target ${{ matrix.target }}
          
      - name: Prepare binary (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          cp target/${{ matrix.target }}/release/static-serve-action ${{ matrix.binary_name }}
          strip ${{ matrix.binary_name }}
          
      - name: Prepare binary (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          copy target\${{ matrix.target }}\release\static-serve-action.exe ${{ matrix.binary_name }}
          
      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.binary_name }}
          path: ${{ matrix.binary_name }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Download binaries
        uses: actions/download-artifact@v4
        
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: '*/static-serve-action-*'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}